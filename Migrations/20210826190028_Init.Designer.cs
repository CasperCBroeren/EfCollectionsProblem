// <auto-generated />
using EfCollections;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EfCollections.Migrations
{
    [DbContext(typeof(ReadingClubContext))]
    [Migration("20210826190028_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("BookPerson", b =>
                {
                    b.Property<int>("BooksReadId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReadbyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BooksReadId", "ReadbyId");

                    b.HasIndex("ReadbyId");

                    b.ToTable("BookPerson");
                });

            modelBuilder.Entity("EfCollections.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("EfCollections.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("BookPerson", b =>
                {
                    b.HasOne("EfCollections.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksReadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCollections.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("ReadbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
